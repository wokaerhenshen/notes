CSDN：
1.HTTPs如何保证传输数据的安全
HTTP将传输的信息进行加密后才传输给客户端，以防信息泄露
加密方法1：对称加密
双方使用公钥
在服务器给客户端发送信息前，首先发送密钥，然后根据该密钥将信息进行加密，客户端收到信息后，用之前收到的密钥进行解密
（弊端:如果黑客截取了该密钥，则可以直接用该密钥进行信息的解密）
加密方法2：非对称加密
有两把钥匙，一把叫做公钥，一把叫做私钥
服务器的消息用客户端的公钥进行加密，将信息传送后，客户端再用自己的私钥进行解密。
如果客户端要把消息传送给服务器，首先要用 服务器的公钥进行加密，传到服务器后，服务器用自己的私钥进行解密
（弊端： 如果黑客传送给服务器自己的公钥，服务器使用黑客的公钥将信息进行加密，加密后再传给黑客，黑客则可以用自己的私钥进行解密）
解决方法：
数字证书，证明合法性。

2.CORS 详解
CORS是一个W3C标准，全称是"跨域资源共享"（Cross-origin resource sharing）。

它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。

CORS与JSONP的使用目的相同，但是比JSONP更强大。

JSONP只支持GET请求，CORS支持所有类型的HTTP请求。JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。

整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。

因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。
